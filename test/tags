!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AllocQueueId	queue.c	/^static int AllocQueueId()$/;"	f	file:
CreateMsgQueue	queue.c	/^QUEUE_STATUS CreateMsgQueue(__OUT int *queueid,int msgsize)$/;"	f
DelMsgQueueFromList	queue.c	/^static QUEUE_STATUS	DelMsgQueueFromList(__IN list *link)$/;"	f	file:
FreeMsgQueue	queue.c	/^static void FreeMsgQueue(__IN MSGQUEUE *msgQueue)$/;"	f	file:
InitQueue	queue.c	/^QUEUE_STATUS InitQueue()$/;"	f
InsertMsgQueue2List	queue.c	/^static QUEUE_STATUS InsertMsgQueue2List(MSGQUEUE *node)$/;"	f	file:
LookUpMsgQueue	queue.c	/^static list *LookUpMsgQueue(int queueid)$/;"	f	file:
MSG	queue.c	/^}MSG;$/;"	t	typeref:struct:__anon3	file:
MSGQUEUE	queue.c	/^}MSGQUEUE;$/;"	t	typeref:struct:__anon4	file:
MsgQueuehead	queue.c	/^list *MsgQueuehead=NULL;$/;"	v
QUEUE_STATUS	queue.c	/^}QUEUE_STATUS;$/;"	t	typeref:enum:__anon1	file:
QUE_FAILT	queue.c	/^	QUE_FAILT,$/;"	e	enum:__anon1	file:
QUE_MSGEMPTY	queue.c	/^	QUE_MSGEMPTY,$/;"	e	enum:__anon1	file:
QUE_MSGFULL	queue.c	/^	QUE_MSGFULL,$/;"	e	enum:__anon1	file:
QUE_NOTFOUND	queue.c	/^	QUE_NOTFOUND,$/;"	e	enum:__anon1	file:
QUE_SUC	queue.c	/^	QUE_SUC,$/;"	e	enum:__anon1	file:
RecvMsg	queue.c	/^QUEUE_STATUS RecvMsg(int queueid, __OUT MSG * msg)$/;"	f
ReleaseAllMsgQueue	queue.c	/^QUEUE_STATUS ReleaseAllMsgQueue()$/;"	f
ReleaseMsgQueue	queue.c	/^QUEUE_STATUS ReleaseMsgQueue(int QueueId)$/;"	f
SendMsg	queue.c	/^QUEUE_STATUS SendMsg(int queueid,MSG msg)$/;"	f
__IN	queue.c	1;"	d	file:
__OUT	queue.c	2;"	d	file:
__u32	queue.c	/^typedef unsigned int __u32;$/;"	t	file:
customer	queue.c	/^void *customer(void *param)$/;"	f
data	queue.c	/^	void *data;$/;"	m	struct:__anon2	file:
g_opslock	queue.c	/^static sem_t g_opslock;$/;"	v	file:
list	queue.c	/^}list;$/;"	t	typeref:struct:__anon2	file:
main	queue.c	/^int main()$/;"	f
message	queue.c	/^	int message;$/;"	m	struct:__anon3	file:
msg	queue.c	/^	MSG	*msg;$/;"	m	struct:__anon4	file:
msglock	queue.c	/^	pthread_mutex_t msglock;$/;"	m	struct:__anon4	file:
msgwait	queue.c	/^	sem_t  msgwait;$/;"	m	struct:__anon4	file:
next	queue.c	/^	void *next;$/;"	m	struct:__anon2	file:
param	queue.c	/^	void *param;$/;"	m	struct:__anon3	file:
product	queue.c	/^void *product(void *param)$/;"	f
queueid	queue.c	/^	int queueid;$/;"	m	struct:__anon4	file:
readmsg_ops	queue.c	/^	int readmsg_ops;$/;"	m	struct:__anon4	file:
reserve	queue.c	/^	__u32 reserve;$/;"	m	struct:__anon4	file:
size	queue.c	/^	int size;$/;"	m	struct:__anon4	file:
writemsg_ops	queue.c	/^	int writemsg_ops;$/;"	m	struct:__anon4	file:
